name: CI

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 10
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '22.20'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - run: pnpm lint
      - run: pnpm run build

      # E2E tests

      # # Install playwright binaries
      - name: Get installed Playwright version
        run: echo "PLAYWRIGHT_VERSION=$(pnpm ls @playwright/test | grep @playwright | sed 's/.* //')" >> $GITHUB_ENV
      - name: Cache playwright binaries
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}
      - run: npx playwright install --with-deps
        if: steps.playwright-cache.outputs.cache-hit != 'true'

      # # Run the tests
      - name: Run E2E tests
        run: chmod -R o+rwx . && pnpm run test:e2e && sudo chmod -R o+rwx .

      - name: Upload test results
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: test results
          path: test/test-results

      - name: Unit tests
        run: pnpm run test
  # More minimal job for Windows/Mac to test specific features that might not work the same
  other-os-tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
          os: [windows-latest, macos-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 10
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '22.20'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # Just run the "extension" tests to make sure the paths are detected correctly on Windows
      - run: pnpm run --filter ./packages/extension test
