name: CI

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - run: pnpm typecheck
      - run: pnpm run build

      # E2E tests

      # # Install playwright binaries
      - name: Get installed Playwright version
        run: echo "PLAYWRIGHT_VERSION=$(pnpm ls @playwright/test | grep @playwright | sed 's/.* //')" >> $GITHUB_ENV
      - name: Cache playwright binaries
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}
      - run: npx playwright install --with-deps
        if: steps.playwright-cache.outputs.cache-hit != 'true'

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2
      - name: Build + cache the test code-server Docker image
        uses: docker/build-push-action@v5
        with:
          load: true
          context: ./test/
          tags: test-code-server
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # # Run the tests
      - run: pnpm run test:e2e

      - name: Upload test results
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: test results
          path: test/test-results

      - name: Unit tests
        run: pnpm run test
