{
  "name": "visual-ui-test-vscode",
  "version": "0.0.0",
  "description": "Run and debug Vitest test cases",
  "displayName": "Vitest Visual",
  "preview": true,
  "keywords": [
    "vitest",
    "test",
    "typescript",
    "javascript"
  ],
  "engines": {
    "vscode": "^1.77.0"
  },
  "categories": [
    "Testing"
  ],
  "activationEvents": [
    "onCommand:vitest-explorer.configureTest",
    "workspaceContains:**/vitest.config.js",
    "workspaceContains:**/vite.config.js",
    "workspaceContains:**/vitest.config.ts",
    "workspaceContains:**/vite.config.ts",
    "workspaceContains:**/package.json"
  ],
  "main": "./dist/extension.js",
  "scripts": {
    "prepare": "./prepare.sh",
    "compile": "tsup --minify && vite build ./src/web-view-vite",
    "watch": "pnpm run \"/^watch:.*/\"",
    "watch:extension": "tsup --watch --sourcemap",
    "watch:vite": "vite ./src/web-view-vite",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "author": "poffm",
  "license": "ISC",
  "contributes": {
    "commands": [
      {
        "title": "Update Snapshot",
        "command": "vitest-visual.updateSnapshot",
        "category": "Vitest"
      },
      {
        "title": "Start Watch Mode",
        "command": "vitest-visual.startWatching",
        "category": "Vitest"
      },
      {
        "title": "Stop Watch Mode",
        "command": "vitest-visual.stopWatching",
        "category": "Vitest"
      },
      {
        "title": "Toggle Watch Mode",
        "command": "vitest-visual.toggleWatching",
        "category": "Vitest"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "vitest-visual.updateSnapshot",
          "when": "false"
        },
        {
          "command": "vitest-visual.startWatching",
          "when": "false"
        },
        {
          "command": "vitest-visual.stopWatching",
          "when": "false"
        }
      ],
      "testing/item/context": [
        {
          "command": "vitest-visual.updateSnapshot"
        }
      ]
    },
    "configuration": {
      "title": "Vitest Visual",
      "properties": {
        "vitest-visual.enable": {
          "description": "This plugin will try to detect whether the current project is set up with Vitest to activate itself. When it failed, you can enable the plugin manually.",
          "type": "boolean",
          "scope": "resource",
          "default": false
        },
        "vitest-visual.commandLine": {
          "markdownDescription": "The command line to start vitest tests. **It should have with the ability to append extra arguments**. For example `npx vitest` or `yarn test --`\n\nThis is a workspace setting. Do not change it in the user setting directly, which will affect all the projects you open",
          "type": "string",
          "scope": "resource",
          "default": ""
        },
        "vitest-visual.include": {
          "markdownDescription": "Include glob for test files. Default: `[\"**/*.{test,spec}.{js,mjs,cjs,ts,mts,cts,jsx,tsx}\"]`",
          "type": "array",
          "default": [
            "**/*.{test,spec}.{js,mjs,cjs,ts,mts,cts,jsx,tsx}"
          ],
          "scope": "resource"
        },
        "vitest-visual.exclude": {
          "markdownDescription": "Exclude globs for test files. \nDefault: `[\"**/node_modules/**\", \"**/dist/**\", \"**/cypress/**\", \"**/.{idea,git,cache,output,temp}/**\"]`",
          "type": "array",
          "default": [
            "**/node_modules/**",
            "**/dist/**",
            "**/cypress/**",
            "**/.{idea,git,cache,output,temp}/**"
          ],
          "scope": "resource"
        },
        "vitest-visual.debugExclude": {
          "markdownDescription": "Automatically skip files covered by these glob patterns. \nDefault: `[\"<node_internals>/**\", \"**/node_modules/**\"]`",
          "type": "array",
          "default": [
            "<node_internals>/**",
            "**/node_modules/**"
          ],
          "scope": "resource"
        },
        "vitest-visual.nodeEnv": {
          "markdownDescription": "The env passed to runner process in addition to `process.env`",
          "type": [
            "object",
            "null"
          ],
          "default": null,
          "scope": "resource"
        },
        "vitest-visual.showFailMessages": {
          "description": "Get instant feedback when using Watch Mode. Pop-ups an error when a test fails.",
          "type": "boolean",
          "scope": "window",
          "default": false
        },
        "vitest-visual.changeBackgroundColor": {
          "description": "Change background color of status bar item on failing tests.",
          "type": "boolean",
          "scope": "window",
          "default": true
        },
        "vitest-visual.disabledWorkspaceFolders": {
          "description": "Disabled workspace folders names in multiroot environment",
          "type": "array",
          "scope": "resource",
          "default": []
        }
      }
    }
  },
  "devDependencies": {
    "@types/node": "^20.11.0",
    "@types/vscode": "^1.85.0",
    "tsup": "^8.0.1",
    "typescript": "^5.3.3",
    "vite": "^5.0.8",
    "vite-plugin-solid": "^2.8.0",
    "vitest": "^1.2.0"
  },
  "dependencies": {
    "solid-js": "^1.8.7",
    "vitest-explorer": "github:vitest-dev/vscode"
  },
  "pnpm": {
    "patchedDependencies": {
      "vitest-explorer@0.2.43": "patches/vitest-explorer@0.2.43.patch"
    }
  }
}
