diff --git a/build/index.js b/build/index.js
index 9778b4374e808ceaf9a0fe5cdc3a90cf54f63c97..99ee303be3b654e46149c179daa5c48dd4378b3b 100644
--- a/build/index.js
+++ b/build/index.js
@@ -81,12 +81,6 @@ Object.defineProperty(exports, "Runner", {
     return _Runner["default"];
   }
 });
-Object.defineProperty(exports, "Snapshot", {
-  enumerable: true,
-  get: function get() {
-    return _Snapshot["default"];
-  }
-});
 Object.defineProperty(exports, "TestReconciler", {
   enumerable: true,
   get: function get() {
@@ -110,7 +104,6 @@ exports.Process = Process;
 var _project_workspace = _interopRequireDefault(require("./project_workspace"));
 var _Runner = _interopRequireDefault(require("./Runner"));
 var _Settings = _interopRequireDefault(require("./Settings"));
-var _Snapshot = _interopRequireDefault(require("./Snapshot"));
 var _parser_nodes = require("./parsers/parser_nodes");
 var _parsers = _interopRequireDefault(require("./parsers"));
 var _test_reconciler = _interopRequireDefault(require("./test_reconciler"));
diff --git a/build/parsers/babel_parser.js b/build/parsers/babel_parser.js
index 56788eabe59bd45fdc9f43328739568705b1ab54..8c6a7078117193a6b7c3a2e13a3c6eb5c17aa81a 100644
--- a/build/parsers/babel_parser.js
+++ b/build/parsers/babel_parser.js
@@ -213,6 +213,11 @@ var parse = exports.parse = function parse(file, data, options) {
         child = addNode('describe', parent, element, lastProperty);
       } else if (isAnIt(name)) {
         child = addNode('it', parent, element, lastProperty);
+
+        // Patched code: include the test block in the "it" node
+        const testBlock = element?.expression?.arguments?.find?.(arg => arg?.type === 'ArrowFunctionExpression')?.body
+        child.testBlock = testBlock
+
       } else if (isAnExpect(element)) {
         child = addNode('expect', parent, element);
       } else if (element && element.type === 'VariableDeclaration') {
